name: 每週資安新聞周報

on:
  schedule:
    - cron: '0 0 * * 1'  # 每週一 00:00 UTC（台灣時間 08:00）
  workflow_dispatch:  # 允許手動觸發

permissions:
  contents: write #允許Actions推送內容到倉庫

jobs:
  fetch-and-summarize-news:
    runs-on: ubuntu-latest

    steps:
      - name: 取得 Repository
        uses: actions/checkout@v4

      - name: 設置 Python 環境
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 安裝 Python 依賴套件
        run: pip install -r requirements.txt

      - name: 抓取資安新聞連結
        run: python scripts/fetch_news_link.py

      - name: 抓取資安新聞
        run: python scripts/fetch_news.py  

      - name: 產生新聞摘要（Groq API）
        run: python scripts/summarize_news.py
        env:
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}

      - name: 生成 Marp 幻燈片 Markdown
        run: python scripts/generate_slides.py

      - name: 發送 LINE 通知
        run: python scripts/send_notification.py
        env:
          LINE_NOTIFY_TOKEN: ${{ secrets.LINE_NOTIFY_TOKEN }}  

      - name: 設置 Node.js 環境
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 安裝 Marp CLI (請忽略此過程）
        run: npm install -g @marp-team/marp-cli

      - name: 轉換 Markdown 為 PDF (請忽略此過程）
        run: marp ../data/report.md --pdf --output data/security_report.pdf

      - name: 轉換 Markdown 為 PPTX (請忽略此過程）
        run: marp ../data/report.md --pptx --output data/security_report.pptx

      - name: 上傳簡報檔案（請忽略此過程）
        uses: actions/upload-artifact@v4
        with:
          name: security_report
          path: |
            data/security_report.pdf
            data/security_report.pptx     

      - name: 發送 LINE 通知
        run: python scripts/send_notification.py
        env:
          LINE_NOTIFY_TOKEN: ${{ secrets.LINE_NOTIFY_TOKEN }}
